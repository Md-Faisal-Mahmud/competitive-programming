//precalculation na korle wrong answer asbe
#include<bits/stdc++.h>
#define faster ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
using namespace std;
const int mod=1000000007;
#define ll long long int
#define size 10000007
ll arr[size];

void sieve(int n)   // smallest prime factor
{
    for (int i=2; i<=n; i++)
    {
        if(arr[i] == 0)
        {
            arr[i] = i;
        }

        int j = 2;

        while(i*j<=n)
        {
            if (arr[i*j]==0)
            {
                arr[i*j] = i;
            }
            j++;
        }
    }
}


int main()
{
    faster
    sieve(10000000);

    int t ;
    cin >> t;

    for (int i=2; i<=10000000; i++)
        {
            arr[i]= arr[i] + arr[i-1] ;
        }


    while(t--) {
        int n; cin >> n;
//        for (int i=2; i<=n; i++)      // this code is amazing , it's give TLE, 
//        {
//            arr[i]= arr[i-1] + arr[i];  //but precalculation solve TLE
//        }
        cout << arr[n] << endl;
    }

}
